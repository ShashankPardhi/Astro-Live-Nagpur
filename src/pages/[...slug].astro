---
import '../styles/shared.css';

// Define TypeScript interface for WordPress post data
interface WordPressPost {
  id: number;
  date: string;
  slug: string;
  title: {
    rendered: string;
  };
  content: {
    rendered: string;
  };
  excerpt: {
    rendered: string;
  };
  _embedded?: {
    "wp:featuredmedia"?: {
      source_url: string;
    }[];
    "wp:term"?: any[][];
    "author"?: {
      name: string;
    }[];
  };
}

// Define path type for proper typing
interface PostPath {
  params: {
    slug: string;
  };
  props: {
    post: WordPressPost;
  };
}

export async function getStaticPaths() {
  try {
    // First, get total count of posts
    const countResponse = await fetch('https://thelivenagpur.com/wp-json/wp/v2/posts?per_page=1');
    if (!countResponse.ok) throw new Error(`HTTP error! status: ${countResponse.status}`);
    
    const totalPosts = parseInt(countResponse.headers.get('X-WP-Total') || '0');
    const postsPerPage = 20; // More reasonable batch size
    const totalPages = Math.ceil(totalPosts / postsPerPage);
    
    // Fetch posts in batches for path generation
    let allPaths: PostPath[] = [];
    
    for (let page = 1; page <= totalPages; page++) {
      const response = await fetch(`https://thelivenagpur.com/wp-json/wp/v2/posts?_embed&per_page=${postsPerPage}&page=${page}`);
      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
      
      const posts = await response.json() as WordPressPost[];
      
      const paths = posts.map((post) => {
        const date = new Date(post.date);
        const year = date.getFullYear();
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const day = String(date.getDate()).padStart(2, '0');
        
        return {
          params: {
            slug: `${year}/${month}/${day}/${post.slug}`
          },
          props: { post },
        };
      });
      
      allPaths = [...allPaths, ...paths];
    }
    
    return allPaths;
  } catch (error) {
    console.error('Error fetching posts:', error);
    return [];
  }
}

const { post } = Astro.props as { post: WordPressPost };
const postDate = new Date(post.date);
const featuredImage = post._embedded?.["wp:featuredmedia"]?.[0]?.source_url;

// Get categories if available
const categories = post._embedded?.["wp:term"]?.[0] || [];
const categoryNames = categories.map(category => category.name).join(', ');

// Get author name if available
const authorName = post._embedded?.["author"]?.[0]?.name || "The Live Nagpur";

// Clean description (remove HTML tags)
const cleanDescription = post.excerpt.rendered.replace(/<[^>]*>/g, '').slice(0, 160);
---

<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{post.title.rendered} - The Live Nagpur</title>
    
    <!-- SEO Meta Tags -->
    <meta name="description" content={cleanDescription}>
    <meta name="keywords" content={`Nagpur news, ${post.title.rendered}, ${categoryNames}, The Live Nagpur`}>
    <meta name="author" content={authorName}>
    
    <!-- Open Graph Meta Tags for social sharing -->
    <meta property="og:title" content={`${post.title.rendered} - The Live Nagpur`}>
    <meta property="og:description" content={cleanDescription}>
    <meta property="og:type" content="article">
    <meta property="og:url" content={Astro.url.href}>
    {featuredImage && <meta property="og:image" content={featuredImage}>}
    <meta property="og:site_name" content="The Live Nagpur">
    
    <!-- Twitter Card Meta Tags -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content={`${post.title.rendered} - The Live Nagpur`}>
    <meta name="twitter:description" content={cleanDescription}>
    {featuredImage && <meta name="twitter:image" content={featuredImage}>}
    
    <!-- Article specific meta data -->
    <meta property="article:published_time" content={post.date}>
    {categories.length > 0 && <meta property="article:section" content={categories[0].name}>}
    
    <!-- Canonical URL -->
    <link rel="canonical" href={Astro.url.href}>
    
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@700&family=Source+Sans+Pro:wght@400;600&display=swap" rel="stylesheet">
    
    <!-- JSON-LD for Articles -->
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "NewsArticle",
      "headline": post.title.rendered,
      "image": featuredImage ? [featuredImage] : [],
      "datePublished": post.date,
      "dateModified": post.date,
      "author": {
        "@type": "Person",
        "name": authorName
      },
      "publisher": {
        "@type": "Organization",
        "name": "The Live Nagpur",
        "logo": {
          "@type": "ImageObject",
          "url": "https://thelivenagpur.com/wp-content/uploads/logo.png"
        }
      },
      "description": cleanDescription,
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": Astro.url.href
      }
    })} />
  </head>
  <body>
    <header class="header">
      <div class="header-content">
        <h1><a href="/" class="home-link">The Live Nagpur</a></h1>
      </div>
    </header>

    <main class="main-content">
      <article class="post">
        <header class="post-header">
          <h1 class="post-title" set:html={post.title.rendered} />
          <time datetime={post.date} class="post-date">
            {postDate.toLocaleDateString('en-US', {
              weekday: 'long',
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </time>
          {authorName !== "The Live Nagpur" && (
            <div class="post-author">By {authorName}</div>
          )}
        </header>

        {featuredImage && (
          <div class="featured-image">
            <img src={featuredImage} alt={post.title.rendered} />
          </div>
        )}

        <div class="post-content" set:html={post.content.rendered} />
      </article>
    </main>

    <footer class="footer">
      <div class="footer-content">
        <h2>The Live Nagpur</h2>
        <p>Your trusted source for Nagpur news</p>
      </div>
    </footer>
  </body>
</html>

<style>
  .post {
    background: white;
    border-radius: 12px;
    padding: 2rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .post-header {
    margin-bottom: 2rem;
    text-align: center;
  }

  .post-title {
    font-family: 'Playfair Display', serif;
    font-size: 2.5rem;
    margin: 0 0 1rem;
    line-height: 1.2;
  }

  .post-date {
    color: var(--text-secondary);
    font-size: 1rem;
  }

  .featured-image {
    margin: 2rem 0;
  }

  .featured-image img {
    width: 100%;
    height: auto;
    border-radius: 12px;
  }

  .post-content {
    font-size: 1.125rem;
    line-height: 1.8;
  }

  .post-content :global(img) {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    margin: 2rem 0;
  }

  .post-content :global(p) {
    margin: 1.5rem 0;
  }

  @media (max-width: 768px) {
    .post {
      padding: 1.5rem;
    }

    .post-title {
      font-size: 2rem;
    }
  }
</style> 